trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: "ubuntu-latest"

variables:
  - name: imageRepository
    value: "ph-observability-chatbot"
  - name: dockerRegistryServiceConnection
    value: "YourAzureContainerRegistry"
  - name: tag
    value: "$(Build.BuildId)"
  - name: vmImageName
    value: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "18.x"
            displayName: "Install Node.js"

          - script: |
              npm ci
            displayName: "Install dependencies"

          - script: |
              npm run build
            displayName: "Build application"

          - script: |
              npm test
            displayName: "Run tests"

          - task: Docker@2
            displayName: "Build and push Docker image"
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: "Dockerfile"
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

  - stage: Deploy
    displayName: Deploy to Azure
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy to App Service
        environment: "production"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: "Deploy to Azure App Service"
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "YourAzureSubscription"
                    appType: "webAppContainer"
                    WebAppName: "ph-observability-chatbot"
                    DockerNamespace: "YourAzureContainerRegistry.azurecr.io"
                    DockerRepository: "$(imageRepository)"
                    DockerImageTag: "$(tag)"
                    AppSettings: |
                      -OTEL_EXPORTER_OTLP_ENDPOINT "$(OTEL_EXPORTER_OTLP_ENDPOINT)"
                      -AZURE_KEY_VAULT_NAME "$(AZURE_KEY_VAULT_NAME)"
                      -AZURE_TENANT_ID "$(AZURE_TENANT_ID)"
                      -AZURE_CLIENT_ID "$(AZURE_CLIENT_ID)"
                      -AZURE_CLIENT_SECRET "$(AZURE_CLIENT_SECRET)"
